package com.unistart.entities;
// Generated Oct 1, 2017 10:03:30 PM by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * MajorUniversity generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
@Table(name = "MajorUniversity", schema = "dbo", catalog = "University")
public class MajorUniversity implements java.io.Serializable {


	private Integer id;
	private Major major;
	@JsonBackReference
	private University university;
	private String description;
	private Double numberOfYear;
	private String requirement;
	private String prospects;
	private Boolean isActive;
	private String majorName;
	private int majorId;
	@JsonManagedReference
	private Set<BlockMajorUniversity> blockMajorUniversities = new HashSet<BlockMajorUniversity>(0);

	public MajorUniversity() {
	}

	public MajorUniversity(Integer id) {
		this.id = id;
	}
	public MajorUniversity(University university) {
		this.university = university;
	}

	public MajorUniversity(Integer id, Major major) {
		super();
		this.id = id;
		this.major = major;
	}

	public MajorUniversity(Integer id, Major major, boolean isACtive) {
		super();
		this.id = id;
		this.majorId = major.getId();
		this.majorName = major.getMajorName();
	}
	
	public MajorUniversity(Integer id, Major major, University university, String description, Double numberOfYear,
			String requirement, String prospects, Boolean isActive, Set<BlockMajorUniversity> blockMajorUniversities) {
		super();
		this.id = id;
		this.major = major;
		this.university = university;
		this.description = description;
		this.numberOfYear = numberOfYear;
		this.requirement = requirement;
		this.prospects = prospects;
		this.isActive = isActive;
		this.blockMajorUniversities = blockMajorUniversities;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "MajorId")
	public Major getMajor() {
		return this.major;
	}

	public void setMajor(Major major) {
		this.major = major;
	}

	@JsonIgnore
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "UniversityId")
	public University getUniversity() {
		return this.university;
	}

	public void setUniversity(University university) {
		this.university = university;
	}

	@Column(name = "Description")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "NumberOfYear")
	public Double getNumberOfYear() {
		return numberOfYear;
	}

	public void setNumberOfYear(Double numberOfYear) {
		this.numberOfYear = numberOfYear;
	}

	@Column(name = "Requirement")
	public String getRequirement() {
		return requirement;
	}

	public void setRequirement(String requirement) {
		this.requirement = requirement;
	}

	@Column(name = "Prospects")
	public String getProspects() {
		return prospects;
	}

	public void setProspects(String prospects) {
		this.prospects = prospects;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "majorUniversity")
	public Set<BlockMajorUniversity> getBlockMajorUniversities() {
		return this.blockMajorUniversities;
	}

	public void setBlockMajorUniversities(Set<BlockMajorUniversity> blockMajorUniversities) {
		this.blockMajorUniversities = blockMajorUniversities;
	}
	
	@Column(name = "isActive")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

}
